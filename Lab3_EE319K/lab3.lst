


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** Lab3.s ***************
    2 00000000         ; Program written by: Chieh-An Chen and Francis King
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 1/10/2022
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 2 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: Two buttons and one LE
                       D)
    8 00000000         ;  Change is Button input  (1 means pressed, 0 means not
                        pressed)
    9 00000000         ;  Breathe is Button input  (1 means pressed, 0 means no
                       t pressed)
   10 00000000         ;  LED is an output (1 activates external LED)
   11 00000000         ; Overall functionality of this system is to operate lik
                       e this
   12 00000000         ;   1) Make LED an output and make Change and Breathe in
                       puts.
   13 00000000         ;   2) The system starts with the the LED toggling at 2H
                       z,
   14 00000000         ;      which is 2 times per second with a duty-cycle of 
                       30%.
   15 00000000         ;      Therefore, the LED is ON for 150ms and off for 35
                       0 ms.
   16 00000000         ;   3) When the Change button is pressed-and-released in
                       crease
   17 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   18 00000000         ;      press-and-release the duty cycle changes from 30%
                        to 70% to 70%
   19 00000000         ;      to 90% to 10% to 30% so on
   20 00000000         ;   4) Implement a "breathing LED" when Breathe Switch i
                       s pressed:
   21 00000000         ; PortE device registers
   22 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   23 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   24 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   25 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   26 00000000         
   27 00000000                 IMPORT           TExaS_Init
   28 00000000                 THUMB
   29 00000000                 AREA             DATA, ALIGN=2
   30 00000000         ;global variables go here
   31 00000000         
   32 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   33 00000000                 THUMB
   34 00000000                 EXPORT           EID1
   35 00000000 63 63 36 
              37 39 39 
              34 00    EID1    DCB              "cc67994",0 ;replace ABC123 wit
                                                            h your EID



ARM Macro Assembler    Page 2 


   36 00000008                 EXPORT           EID2
   37 00000008 66 6D 6B 
              33 32 35 
              00       EID2    DCB              "fmk325",0  ;replace ABC123 wit
                                                            h your EID
   38 0000000F 00              ALIGN            4
   39 00000010         
   40 00000010                 EXPORT           Start
   41 00000010         
   42 00000010         Start
   43 00000010         ; TExaS_Init sets bus clock at 80 MHz, interrupts, ADC1,
                        TIMER3, TIMER5, and UART0
   44 00000010 F04F 0002       MOV              R0,#2       ;0 for TExaS oscill
                                                            oscope, 1 for PORTE
                                                             logic analyzer, 2 
                                                            for Lab3 grader, 3 
                                                            for none
   45 00000014 F7FF FFFE       BL               TExaS_Init  ;enables interrupts
                                                            , prints the pin se
                                                            lections based on E
                                                            ID1 EID2
   46 00000018         ; Your Initialization goes here
   47 00000018 486B            LDR              R0, =SYSCTL_RCGCGPIO_R
   48 0000001A 7801            LDRB             R1, [R0]
   49 0000001C F041 0110       ORR              R1, #16
   50 00000020 7001            STRB             R1, [R0]
   51 00000022 BF00            NOP
   52 00000024 BF00            NOP
   53 00000026         
   54 00000026 4869            LDR              R0, =GPIO_PORTE_DIR_R 
                                                            ;direction
   55 00000028 6801            LDR              R1, [R0]
   56 0000002A F041 0120       ORR              R1, R1, #32 ;sets PE5 to output
                                                            
   57 0000002E F021 010A       BIC              R1, R1, #10 ;sets PE1,3 to inpu
                                                            t
   58 00000032 6001            STR              R1, [R0]
   59 00000034         
   60 00000034 4866            LDR              R0, = GPIO_PORTE_DEN_R ;enable
   61 00000036 6801            LDR              R1, [R0]
   62 00000038 F041 012A       ORR              R1, R1, #42 ;enable pins 1,3,5
   63 0000003C 6001            STR              R1, [R0]
   64 0000003E         
   65 0000003E B662            CPSIE            I
   66 00000040 F04F 0332       MOV              R3, #50     ;seconds counter
   67 00000044 F04F 0203       MOV              R2, #3      ;percent
   68 00000048 F04F 0400       MOV              R4, #0
   69 0000004C 00004E20 
                       count   EQU              20000
   70 0000004C         
   71 0000004C         
   72 0000004C         loop
   73 0000004C         ; main engine goes here
   74 0000004C 4861            LDR              R0, =GPIO_PORTE_DATA_R
   75 0000004E 6806            LDR              R6, [R0]    ;R6 HOLDS PAST REG 
                                                            VALUE
   76 00000050 F006 0602       AND              R6, #0X02
   77 00000054 F240 25EE       MOV              R5, #750    ;600
   78 00000058 F240 6A72       MOV              R10, #1650  ;1400 



ARM Macro Assembler    Page 3 


   79 0000005C         
   80 0000005C         
   81 0000005C         change
   82 0000005C 485D            LDR              R0, =GPIO_PORTE_DATA_R
   83 0000005E 6807            LDR              R7, [R0]
   84 00000060 F007 0708       AND              R7, #0X08
   85 00000064 2F00            CMP              R7, #0
   86 00000066 D146            BNE              BREATHE
   87 00000068         
   88 00000068 485A            LDR              R0, =GPIO_PORTE_DATA_R
   89 0000006A 6807            LDR              R7, [R0]
   90 0000006C F007 0702       AND              R7, #0X02
   91 00000070 EB07 0906       ADD              R9, R7, R6  ; COMPARE PREVIOUS 
                                                            AND CURRENT 
   92 00000074 F1B9 0F04       CMP              R9, #4
   93 00000078 D0F0            BEQ              change      ; BRANCH IF 1>1
   94 0000007A 42B7            CMP              R7, R6
   95 0000007C D31C            BLO              increment   ;BRANCH IF 1>0
   96 0000007E F107 0600       ADD              R6, R7, #0
   97 00000082 D8EB            BHI              change      ; BRANCH IF 0>1    
                                                             
   98 00000084 D0FF            BEQ              sameduty
   99 00000086         
  100 00000086         
  101 00000086         sameduty
  102 00000086 4853            LDR              R0, =GPIO_PORTE_DATA_R
  103 00000088 F8D0 8000       LDR              R8, [R0]    ;Load R8 with Port 
                                                            E Data
  104 0000008C F048 0820       ORR              R8, R8, #0x20 ;OR with 0010 000
                                                            0 5th bit/turn on L
                                                            ED
  105 00000090 F8C0 8000       STR              R8, [R0]    ;Store new DATA in 
                                                            address in R0
  106 00000094 FB02 F503       MUL              R5, R2, R3  ;Multiply 50 second
                                                            s with 3 and store 
                                                            to R5 to get initia
                                                            l duty cycle
  107 00000098 F000 F818       BL               delay       ;Unconditional bran
                                                            ch to delay
  108 0000009C         
  109 0000009C         LEDOFF
  110 0000009C F8D0 8000       LDR              R8, [R0]
  111 000000A0 F008 08DF       AND              R8, #0xDF
  112 000000A4 F8C0 8000       STR              R8, [R0]
  113 000000A8 F04F 050A       MOV              R5, #10
  114 000000AC 1AAD            SUBS             R5, R5, R2
  115 000000AE FB05 F503       MUL              R5, R5, R3
  116 000000B2 F000 F80B       BL               delay
  117 000000B6         
  118 000000B6 E7C9            B                loop
  119 000000B8         
  120 000000B8         increment
  121 000000B8 F102 0202       ADD              R2, R2, #2
  122 000000BC F007 0700       AND              R7, R7, #0
  123 000000C0 F006 0600       AND              R6, R6, #0
  124 000000C4 2A0B            CMP              R2, #11
  125 000000C6 D012            BEQ              backto10
  126 000000C8         back
  127 000000C8 F7FF FFDD       BL               sameduty



ARM Macro Assembler    Page 4 


  128 000000CC         
  129 000000CC         delay
  130 000000CC B422            PUSH             {R1, R5}    ;Save states of R1 
                                                            and R5
  131 000000CE F644 0144       MOV              R1, #18500  ;Load R1 with 8889
  132 000000D2 FB05 F501       MUL              R5, R5, R1  ;Multiply 8889 with
                                                             value of R5
  133 000000D6         change_pressed                       ; check if the chan
                                                            ge button is presse
                                                            d
  134 000000D6 1E6D            SUBS             R5, R5, #1  ;subtract R5 by 1
  135 000000D8 D1FD            BNE              change_pressed ;if value in R5 
                                                            does not equal 0, b
                                                            ranch back to chang
                                                            e_pressed
  136 000000DA BC22            POP              {R1, R5}    ;pop R1 and R5
  137 000000DC F109 0901       ADD              R9, R9, #1
  138 000000E0 F009 0901       AND              R9, R9, #1
  139 000000E4 F1B9 0F01       CMP              R9, #1
  140 000000E8 D1B8            BNE              change      ;return to call fun
                                                            ction
  141 000000EA F7FF FFD7       BL               LEDOFF
  142 000000EE         
  143 000000EE         backto10
  144 000000EE F2A2 020A       ADD              R2, R2, #-10
  145 000000F2 F7FF FFE9       BL               back
  146 000000F6         
  147 000000F6         
  148 000000F6         
  149 000000F6         
  150 000000F6         
  151 000000F6         
  152 000000F6         
  153 000000F6         BREATHE                              ;Breath function ca
                                                            lls breath2 which i
                                                            s the basic duty cy
                                                            cle
  154 000000F6 E92D 024C       PUSH{R2,         R3, R6, R9} ;Save States of R2,
                                                             R3, R6 and R9
  155 000000FA F04F 0703       MOV              R7, #3
  156 000000FE F04F 0900       MOV              R9, #0
  157 00000102         
  158 00000102         CYCLE20
  159 00000102 F100 0000       ADD              R0, R0, #0
  160 00000106         LEDONB
  161 00000106 4833            LDR              R0, =GPIO_PORTE_DATA_R
  162 00000108 F8D0 8000       LDR              R8, [R0]    ;Load R8 with Port 
                                                            E Data
  163 0000010C F048 0820       ORR              R8, R8, #0x20 ;OR with 0010 000
                                                            0 5th bit/turn on L
                                                            ED
  164 00000110 F8C0 8000       STR              R8, [R0]    ;Store new DATA in 
                                                            address in R0
  165 00000114 FB02 F503       MUL              R5, R2, R3  ;Multiply 50 second
                                                            s with 3 and store 
                                                            to R5 to get initia
                                                            l duty cycle
  166 00000118         
  167 00000118 F000 F841       BL               delaybon    ;Unconditional bran



ARM Macro Assembler    Page 5 


                                                            ch to delay
  168 0000011C         
  169 0000011C         
  170 0000011C         
  171 0000011C         LEDOFFB
  172 0000011C 482D            LDR              R0, =GPIO_PORTE_DATA_R
  173 0000011E F8D0 8000       LDR              R8, [R0]    ;Load R8 with Port 
                                                            E Data
  174 00000122 F028 0820       BIC              R8, R8, #0x20 ;OR with 0010 000
                                                            0 5th bit/turn on L
                                                            ED
  175 00000126 F8C0 8000       STR              R8, [R0]    ;Store new DATA in 
                                                            address in R0
  176 0000012A F04F 050A       MOV              R5, #10
  177 0000012E EBA5 0502       SUB              R5, R5, R2
  178 00000132 FB05 F503       MUL              R5, R5, R3
  179 00000136 F000 F832       BL               delaybon    ;Unconditional bran
                                                            ch to delay
  180 0000013A F000 F839       BL               counter
  181 0000013E         backb
  182 0000013E F102 0201       ADD              R2, R2, #1
  183 00000142 2A0A            CMP              R2, #10
  184 00000144 D101            BNE              INCREMENT
  185 00000146 F000 F808       BL               DECREMENT
  186 0000014A         
  187 0000014A         INCREMENT
  188 0000014A F102 32FF       ADD              R2, R2, #-1
  189 0000014E F102 0201       ADD              R2, R2, #1
  190 00000152 F04F 0703       MOV              R7, #3
  191 00000156 F7FF FF81       BL               change
  192 0000015A         
  193 0000015A         DECREMENT
  194 0000015A 1E52            SUBS             R2, R2, #1
  195 0000015C         LEDONBD
  196 0000015C 481D            LDR              R0, =GPIO_PORTE_DATA_R
  197 0000015E F8D0 8000       LDR              R8, [R0]    ;Load R8 with Port 
                                                            E Data
  198 00000162 F048 0820       ORR              R8, R8, #0x20 ;OR with 0010 000
                                                            0 5th bit/turn on L
                                                            ED
  199 00000166 F8C0 8000       STR              R8, [R0]    ;Store new DATA in 
                                                            address in R0
  200 0000016A FB02 F503       MUL              R5, R2, R3  ;Multiply 50 second
                                                            s with 3 and store 
                                                            to R5 to get initia
                                                            l duty cycle
  201 0000016E         
  202 0000016E F000 F816       BL               delaybon    ;Unconditional bran
                                                            ch to delay
  203 00000172         
  204 00000172         
  205 00000172         LEDOFFBD
  206 00000172 4818            LDR              R0, =GPIO_PORTE_DATA_R
  207 00000174 F8D0 8000       LDR              R8, [R0]    ;Load R8 with Port 
                                                            E Data
  208 00000178 F028 0820       BIC              R8, R8, #0x20 ;OR with 0010 000
                                                            0 5th bit/turn on L
                                                            ED
  209 0000017C F8C0 8000       STR              R8, [R0]    ;Store new DATA in 



ARM Macro Assembler    Page 6 


                                                            address in R0
  210 00000180 F04F 050A       MOV              R5, #10
  211 00000184 EBA5 0502       SUB              R5, R5, R2
  212 00000188 FB05 F503       MUL              R5, R5, R3
  213 0000018C F000 F807       BL               delaybon    ;Unconditional bran
                                                            ch to delay
  214 00000190 F000 F814       BL               counterd
  215 00000194         backbd
  216 00000194 2A00            CMP              R2, #0
  217 00000196 F43F AF61       BEQ              change
  218 0000019A F7FF FFDE       BL               DECREMENT
  219 0000019E         
  220 0000019E         delaybon
  221 0000019E B422            PUSH{R1,         R5}
  222 000001A0 F241 3188       MOV              R1, #5000
  223 000001A4 FB01 F505       MUL              R5, R1, R5
  224 000001A8         loop1bon
  225 000001A8 1E6D            SUBS             R5, R5, #1
  226 000001AA D1FD            BNE              loop1bon
  227 000001AC BC22            POP              {R1, R5}
  228 000001AE 4770            BX               LR
  229 000001B0         
  230 000001B0         counter
  231 000001B0 1E7F            SUBS             R7, R7, #1
  232 000001B2 D1A8            BNE              LEDONB
  233 000001B4 F04F 0703       MOV              R7, #3
  234 000001B8 F7FF FFC1       BL               backb
  235 000001BC         
  236 000001BC         counterd
  237 000001BC 1E7F            SUBS             R7, R7, #1
  238 000001BE D1CD            BNE              LEDONBD
  239 000001C0 F04F 0703       MOV              R7, #3
  240 000001C4 F7FF FFE6       BL               backbd
  241 000001C8         
  242 000001C8         
  243 000001C8         
  244 000001C8         
  245 000001C8         
  246 000001C8         
  247 000001C8                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  248 000001C8                 END                          ; end of file
              400FE608 
              40024400 
              4002451C 
              400243FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lab3.d -o.\lab3.o -I.\RTE\_Lab3 -IC:\Users\achen\AppData\Local\A
rm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\achen\AppData\Local\Arm\
Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --
predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SETA 1" --predefine="
TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\lab3.lst Lab3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 29 in file Lab3.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 32 in file Lab3.s
   Uses
      None
Comment: .text unused
BREATHE 000000F6

Symbol: BREATHE
   Definitions
      At line 153 in file Lab3.s
   Uses
      At line 86 in file Lab3.s
Comment: BREATHE used once
CYCLE20 00000102

Symbol: CYCLE20
   Definitions
      At line 158 in file Lab3.s
   Uses
      None
Comment: CYCLE20 unused
DECREMENT 0000015A

Symbol: DECREMENT
   Definitions
      At line 193 in file Lab3.s
   Uses
      At line 185 in file Lab3.s
      At line 218 in file Lab3.s

EID1 00000000

Symbol: EID1
   Definitions
      At line 35 in file Lab3.s
   Uses
      At line 34 in file Lab3.s
Comment: EID1 used once
EID2 00000008

Symbol: EID2
   Definitions
      At line 37 in file Lab3.s
   Uses
      At line 36 in file Lab3.s
Comment: EID2 used once
INCREMENT 0000014A

Symbol: INCREMENT
   Definitions
      At line 187 in file Lab3.s
   Uses
      At line 184 in file Lab3.s
Comment: INCREMENT used once
LEDOFF 0000009C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: LEDOFF
   Definitions
      At line 109 in file Lab3.s
   Uses
      At line 141 in file Lab3.s
Comment: LEDOFF used once
LEDOFFB 0000011C

Symbol: LEDOFFB
   Definitions
      At line 171 in file Lab3.s
   Uses
      None
Comment: LEDOFFB unused
LEDOFFBD 00000172

Symbol: LEDOFFBD
   Definitions
      At line 205 in file Lab3.s
   Uses
      None
Comment: LEDOFFBD unused
LEDONB 00000106

Symbol: LEDONB
   Definitions
      At line 160 in file Lab3.s
   Uses
      At line 232 in file Lab3.s
Comment: LEDONB used once
LEDONBD 0000015C

Symbol: LEDONBD
   Definitions
      At line 195 in file Lab3.s
   Uses
      At line 238 in file Lab3.s
Comment: LEDONBD used once
Start 00000010

Symbol: Start
   Definitions
      At line 42 in file Lab3.s
   Uses
      At line 40 in file Lab3.s
Comment: Start used once
back 000000C8

Symbol: back
   Definitions
      At line 126 in file Lab3.s
   Uses
      At line 145 in file Lab3.s
Comment: back used once
backb 0000013E

Symbol: backb
   Definitions
      At line 181 in file Lab3.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 234 in file Lab3.s
Comment: backb used once
backbd 00000194

Symbol: backbd
   Definitions
      At line 215 in file Lab3.s
   Uses
      At line 240 in file Lab3.s
Comment: backbd used once
backto10 000000EE

Symbol: backto10
   Definitions
      At line 143 in file Lab3.s
   Uses
      At line 125 in file Lab3.s
Comment: backto10 used once
change 0000005C

Symbol: change
   Definitions
      At line 81 in file Lab3.s
   Uses
      At line 93 in file Lab3.s
      At line 97 in file Lab3.s
      At line 140 in file Lab3.s
      At line 191 in file Lab3.s
      At line 217 in file Lab3.s

change_pressed 000000D6

Symbol: change_pressed
   Definitions
      At line 133 in file Lab3.s
   Uses
      At line 135 in file Lab3.s
Comment: change_pressed used once
counter 000001B0

Symbol: counter
   Definitions
      At line 230 in file Lab3.s
   Uses
      At line 180 in file Lab3.s
Comment: counter used once
counterd 000001BC

Symbol: counterd
   Definitions
      At line 236 in file Lab3.s
   Uses
      At line 214 in file Lab3.s
Comment: counterd used once
delay 000000CC

Symbol: delay
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 129 in file Lab3.s
   Uses
      At line 107 in file Lab3.s
      At line 116 in file Lab3.s

delaybon 0000019E

Symbol: delaybon
   Definitions
      At line 220 in file Lab3.s
   Uses
      At line 167 in file Lab3.s
      At line 179 in file Lab3.s
      At line 202 in file Lab3.s
      At line 213 in file Lab3.s

increment 000000B8

Symbol: increment
   Definitions
      At line 120 in file Lab3.s
   Uses
      At line 95 in file Lab3.s
Comment: increment used once
loop 0000004C

Symbol: loop
   Definitions
      At line 72 in file Lab3.s
   Uses
      At line 118 in file Lab3.s
Comment: loop used once
loop1bon 000001A8

Symbol: loop1bon
   Definitions
      At line 224 in file Lab3.s
   Uses
      At line 226 in file Lab3.s
Comment: loop1bon used once
sameduty 00000086

Symbol: sameduty
   Definitions
      At line 101 in file Lab3.s
   Uses
      At line 98 in file Lab3.s
      At line 127 in file Lab3.s

27 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 22 in file Lab3.s
   Uses
      At line 74 in file Lab3.s
      At line 82 in file Lab3.s
      At line 88 in file Lab3.s
      At line 102 in file Lab3.s
      At line 161 in file Lab3.s
      At line 172 in file Lab3.s
      At line 196 in file Lab3.s
      At line 206 in file Lab3.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 24 in file Lab3.s
   Uses
      At line 60 in file Lab3.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 23 in file Lab3.s
   Uses
      At line 54 in file Lab3.s
Comment: GPIO_PORTE_DIR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 25 in file Lab3.s
   Uses
      At line 47 in file Lab3.s
Comment: SYSCTL_RCGCGPIO_R used once
count 00004E20

Symbol: count
   Definitions
      At line 69 in file Lab3.s
   Uses
      None
Comment: count unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 27 in file Lab3.s
   Uses
      At line 45 in file Lab3.s
Comment: TExaS_Init used once
1 symbol
370 symbols in table
