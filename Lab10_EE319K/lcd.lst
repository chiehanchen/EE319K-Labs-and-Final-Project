


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         ; Student names: Juan Gonzales
    3 00000000         ; Last modification date: 03/30/22
    4 00000000         
    5 00000000         ; Runs on TM4C123
    6 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
    7 00000000         
    8 00000000         ; As part of Lab 7, students need to implement these wri
                       tecommand and writedata
    9 00000000         ; This driver assumes two low-level LCD functions
   10 00000000         
   11 00000000         ; Backlight (pin 10) connected to +3.3 V
   12 00000000         ; MISO (pin 9) unconnected
   13 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   14 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   15 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   16 00000000         ; CARD_CS (pin 5) unconnected
   17 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   18 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   19 00000000         ; VCC (pin 2) connected to +3.3 V
   20 00000000         ; Gnd (pin 1) connected to ground
   21 00000000         
   22 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   23 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008
   24 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   25 00000000         
   26 00000000                 EXPORT           writecommand
   27 00000000                 EXPORT           writedata
   28 00000000         
   29 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   30 00000000                 THUMB
   31 00000000                 ALIGN
   32 00000000         
   33 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   34 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   35 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   36 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   37 00000000         ; lot of data, the FIFOs are not used when writing
   38 00000000         ; commands, and they are used when writing data.  This
   39 00000000         ; ensures that the Data/Command pin status matches the b
                       yte
   40 00000000         ; that is actually being transmitted.
   41 00000000         ; The write command operation waits until all data has b
                       een
   42 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   43 00000000         ; the command, and then waits for the transmission to



ARM Macro Assembler    Page 2 


   44 00000000         ; finish.
   45 00000000         ; The write data operation waits until there is room in 
                       the
   46 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
   47 00000000         ; and then adds the data to the transmit FIFO.
   48 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
   49 00000000         ; the SSI0 module is not initialized and enabled.
   50 00000000         
   51 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
   52 00000000         ; Input: R0  8-bit command to transmit
   53 00000000         ; Output: none
   54 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   55 00000000         writecommand
   56 00000000         ;; --UUU-- Code to write a command to the LCD
   57 00000000         ;1) Read SSI0_SR_R and check bit 4, 
   58 00000000         ;2) If bit 4 is high, loop back to step 1 (wait for BUSY
                        bit to be low)
   59 00000000         ;3) Clear D/C=PA6 to zero
   60 00000000         ;4) Write the command to SSI0_DR_R
   61 00000000         ;5) Read SSI0_SR_R and check bit 4, 
   62 00000000         ;6) If bit 4 is high, loop back to step 5 (wait for BUSY
                        bit to be low)
   63 00000000 4A10    bussy   LDR              R2, =SSI0_SR_R
   64 00000002 6811            LDR              R1, [R2]
   65 00000004 F011 0110       ANDS             R1, #0x10
   66 00000008 2910            cmp              R1, #0x10
   67 0000000A D0F9            BEQ              bussy
   68 0000000C 4B0E            LDR              R3, =GPIO_PORTA_DATA_R
   69 0000000E 6819            LDR              R1, [R3]
   70 00000010 F021 0140       BIC              R1, #0x40
   71 00000014 6019            STR              R1, [R3]
   72 00000016 4B0D            LDR              R3, =SSI0_DR_R
   73 00000018 6018            STR              R0, [R3]
   74 0000001A 6811    dusy    LDR              R1, [R2]
   75 0000001C F011 0110       ANDS             R1, #0x10
   76 00000020 2910            cmp              R1, #0x10
   77 00000022 D0FA            BEQ              dusy
   78 00000024 4770            BX               LR          ;   return
   79 00000026         
   80 00000026         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
   81 00000026         ; Input: R0  8-bit data to transmit
   82 00000026         ; Output: none
   83 00000026         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
   84 00000026         writedata
   85 00000026         ;; --UUU-- Code to write data to the LCD
   86 00000026         ;1) Read SSI0_SR_R and check bit 1, 
   87 00000026         ;2) If bit 1 is low loop back to step 1 (wait for TNF bi
                       t to be high)
   88 00000026         ;3) Set D/C=PA6 to one
   89 00000026         ;4) Write the 8-bit data to SSI0_DR_R
   90 00000026 4A07    dusty   LDR              R2, =SSI0_SR_R
   91 00000028 6811            LDR              R1, [R2]
   92 0000002A F011 0102       ANDS             R1, #0x02



ARM Macro Assembler    Page 3 


   93 0000002E 2900            cmp              R1, #0
   94 00000030 D0F9            BEQ              dusty
   95 00000032 4B05            LDR              R3, =GPIO_PORTA_DATA_R
   96 00000034 6819            LDR              R1, [R3]
   97 00000036 F041 0140       ORR              R1, #0x40
   98 0000003A 6019            STR              R1, [R3]
   99 0000003C 4B03            LDR              R3, =SSI0_DR_R
  100 0000003E 6018            STR              R0, [R3]
  101 00000040         
  102 00000040 4770            BX               LR          ;   return
  103 00000042         
  104 00000042         
  105 00000042         ;***************************************************
  106 00000042         ; This is a library for the Adafruit 1.8" SPI display.
  107 00000042         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  108 00000042         ; ----> http://www.adafruit.com/products/358
  109 00000042         ; as well as Adafruit raw 1.8" TFT display
  110 00000042         ; ----> http://www.adafruit.com/products/618
  111 00000042         ;
  112 00000042         ; Check out the links above for our tutorials and wiring
                        diagrams
  113 00000042         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  114 00000042         ; interface (RST is optional)
  115 00000042         ; Adafruit invests time and resources providing this ope
                       n source code,
  116 00000042         ; please support Adafruit and open-source hardware by pu
                       rchasing
  117 00000042         ; products from Adafruit!
  118 00000042         ;
  119 00000042         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  120 00000042         ; MIT license, all text above must be included in any re
                       distribution
  121 00000042         ;****************************************************
  122 00000042         
  123 00000042 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  124 00000044                 END                          ; end of file
              4000800C 
              400043FC 
              40008008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lcd.d -o.\lcd.o -I.\RTE\_SpaceInvaders -IC:\Users\achen\AppData\
Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\achen\AppData\Loc
al\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SET
A 1" --predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SETA 1" --pred
efine="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 29 in file LCD.s
   Uses
      None
Comment: .text unused
bussy 00000000

Symbol: bussy
   Definitions
      At line 63 in file LCD.s
   Uses
      At line 67 in file LCD.s
Comment: bussy used once
dusty 00000026

Symbol: dusty
   Definitions
      At line 90 in file LCD.s
   Uses
      At line 94 in file LCD.s
Comment: dusty used once
dusy 0000001A

Symbol: dusy
   Definitions
      At line 74 in file LCD.s
   Uses
      At line 77 in file LCD.s
Comment: dusy used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 55 in file LCD.s
   Uses
      At line 26 in file LCD.s
Comment: writecommand used once
writedata 00000026

Symbol: writedata
   Definitions
      At line 84 in file LCD.s
   Uses
      At line 27 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 22 in file LCD.s
   Uses
      At line 68 in file LCD.s
      At line 95 in file LCD.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 23 in file LCD.s
   Uses
      At line 72 in file LCD.s
      At line 99 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 24 in file LCD.s
   Uses
      At line 63 in file LCD.s
      At line 90 in file LCD.s

3 symbols
345 symbols in table
