


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000 00000000 
                       value   EQU              0           ; Binding
   18 00000000 00000004 
                       len     EQU              4           ; Binding
   19 00000000         
   20 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   21 00000000                 THUMB
   22 00000000         
   23 00000000                 MACRO
   24 00000000                 UMOD             $Mod,$Divnd,$Divsr ;MOD,DIVIDEN
                                                            D,DIVISOR
   25 00000000                 UDIV             $Mod,$Divnd,$Divsr ;Mod = DIVID
                                                            END/DIVISOR
   26 00000000                 MUL              $Mod,$Mod,$Divsr ;Mod = DIVISOR
                                                            *(DIVIDEND/DIVISOR)
                                                            
   27 00000000                 SUB              $Mod,$Divnd,$Mod ;Mod = DIVIDEN
                                                            D-DIVISOR*(DIVIDEND
                                                            /DIVISOR)
   28 00000000                 MEND
   29 00000000         
   30 00000000         
   31 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   32 00000000         ; Output a 32-bit number in unsigned decimal format
   33 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   34 00000000         ; Output: none
   35 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   36 00000000         LCD_OutDec
   37 00000000 B501            PUSH             {LR, R0}
   38 00000002         
   39 00000002         ; First, we allocate spaces
   40 00000002 B082            SUB              SP, #8      ;
   41 00000004         
   42 00000004         ; Now we access our values
   43 00000004 280A            CMP              R0, #10
   44 00000006 D30F            BLO              stillMore



ARM Macro Assembler    Page 2 


   45 00000008 F04F 030A       MOV              R3, #0xA
   46 0000000C FBB0 F2F3       UDIV             R2, R0, R3
   47 00000010 FB02 0113       MLS              R1, R2, R3, R0
   48 00000014 4610            MOV              R0, R2
   49 00000016 9100            STR              R1, [SP, #value]
   50 00000018 F7FF FFFE       BL               LCD_OutDec
   51 0000001C 9800            LDR              R0, [SP, #value]
   52 0000001E F100 0030       ADD              R0, #0x30
   53 00000022 F7FF FFFE       BL               ST7735_OutChar
   54 00000026 E003            B                allSet
   55 00000028         stillMore
   56 00000028 F100 0030       ADD              R0, #0x30
   57 0000002C F7FF FFFE       BL               ST7735_OutChar
   58 00000030         allSet
   59 00000030         
   60 00000030         ; Deallocate Stack
   61 00000030         
   62 00000030 B002            ADD              SP, #8
   63 00000032         
   64 00000032 E8BD 4001       POP              {LR, R0}
   65 00000036         
   66 00000036 4770            BX               LR
   67 00000038         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   68 00000038         
   69 00000038         ; -----------------------LCD _OutFix--------------------
                       --
   70 00000038         ; Output characters to LCD display in fixed-point format
                       
   71 00000038         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   72 00000038         ; Inputs:  R0 is an unsigned 32-bit number
   73 00000038         ; Outputs: none
   74 00000038         ; E.g., R0=0,    then output "0.000 "
   75 00000038         ;       R0=3,    then output "0.003"
   76 00000038         ;       R0=89,   then output "0.089"
   77 00000038         ;       R0=123,  then output "0.123"
   78 00000038         ;       R0=9999, then output "9.999"
   79 00000038         ;       R0>9999, then output "*.***"
   80 00000038         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   81 00000038         LCD_OutFix
   82 00000038 F04F 0100       MOV              R1, #0
   83 0000003C         moreToDo
   84 0000003C B513            PUSH             {LR, R4, R1, R0}
   85 0000003E         
   86 0000003E         ; ******Allocation Phase******* 
   87 0000003E B082            SUB              SP, #8      ; Allocate num
   88 00000040         
   89 00000040         ; *****Access Phase*******
   90 00000040 F242 7410       MOV              R4, #10000
   91 00000044 42A0            CMP              R0, R4      ;If number is too b
                                                            ig then we need to 
                                                            output the stars
   92 00000046 D21B            BHS              pound
   93 00000048 2904            CMP              R1, #4      ; Check if we have 
                                                            reached the last ch
                                                            aracter
   94 0000004A D02D            BEQ              done
   95 0000004C F04F 030A       MOV              R3, #0xA



ARM Macro Assembler    Page 3 


   96 00000050 FBB0 F2F3       UDIV             R2, R0, R3  ; Shift the charact
                                                            er to the first pos
                                                            ition
   97 00000054 FB02 0413       MLS              R4, R2, R3, R0
   98 00000058 4610            MOV              R0, R2
   99 0000005A 9400            STR              R4, [SP, #value]
  100 0000005C 9101            STR              R1, [SP, #len]
  101 0000005E F101 0101       ADD              R1, #1
  102 00000062 F7FF FFEB       BL               moreToDo
  103 00000066 9800            LDR              R0, [SP, #value]
  104 00000068 F100 0030       ADD              R0, #0x30   ; add 0x30 after th
                                                            e decimal number we
                                                             want to output bec
                                                            ause ASCII char is 
                                                            0x3#
  105 0000006C F7FF FFFE       BL               ST7735_OutChar
  106 00000070 9901            LDR              R1, [SP, #len]
  107 00000072 2903            CMP              R1, #3
  108 00000074 D118            BNE              done
  109 00000076         
  110 00000076 F04F 002E       MOV              R0, #0x2E   ; Output the period
                                                            
  111 0000007A F7FF FFFE       BL               ST7735_OutChar
  112 0000007E E013            B                done
  113 00000080         
  114 00000080         pound
  115 00000080 F04F 002A       MOV              R0, #0x2A   ; output the first 
                                                            * before the period
                                                            
  116 00000084 F7FF FFFE       BL               ST7735_OutChar
  117 00000088 F04F 002E       MOV              R0, #0x2E   ; output the period
                                                             "."
  118 0000008C F7FF FFFE       BL               ST7735_OutChar
  119 00000090 F04F 002A       MOV              R0, #0x2A   ; output the next *
                                                             after the period
  120 00000094 F7FF FFFE       BL               ST7735_OutChar
  121 00000098 F04F 002A       MOV              R0, #0x2A   ; output the second
                                                             * before the perio
                                                            d
  122 0000009C F7FF FFFE       BL               ST7735_OutChar
  123 000000A0 F04F 002A       MOV              R0, #0x2A   ; output the last *
                                                             before the period
  124 000000A4 F7FF FFFE       BL               ST7735_OutChar
  125 000000A8         done
  126 000000A8         
  127 000000A8         
  128 000000A8         ;****Deallocation Phase***** 
  129 000000A8 B002            ADD              SP, #8
  130 000000AA         
  131 000000AA         
  132 000000AA E8BD 4013       POP              {LR, R4, R1, R0}
  133 000000AE         
  134 000000AE 4770            BX               LR
  135 000000B0         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  136 000000B0         
  137 000000B0                 ALIGN
  138 000000B0         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  139 000000B0         
  140 000000B0                 ALIGN                        ; make sure the end



ARM Macro Assembler    Page 4 


                                                             of this section is
                                                             aligned
  141 000000B0                 END                          ; end of file
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\print.d -o.\print.o -I.\RTE\_Lab8 -IC:\Users\achen\AppData\Local
\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\achen\AppData\Local\Ar
m\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" 
--predefine="__UVISION_VERSION SETA 536" --predefine="_RTE_ SETA 1" --predefine
="TM4C123GH6PM SETA 1" --predefine="_RTE_ SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 20 in file Print.s
   Uses
      None
Comment: .text unused
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 36 in file Print.s
   Uses
      At line 14 in file Print.s
      At line 50 in file Print.s

LCD_OutFix 00000038

Symbol: LCD_OutFix
   Definitions
      At line 81 in file Print.s
   Uses
      At line 15 in file Print.s
Comment: LCD_OutFix used once
allSet 00000030

Symbol: allSet
   Definitions
      At line 58 in file Print.s
   Uses
      At line 54 in file Print.s
Comment: allSet used once
done 000000A8

Symbol: done
   Definitions
      At line 125 in file Print.s
   Uses
      At line 94 in file Print.s
      At line 108 in file Print.s
      At line 112 in file Print.s

moreToDo 0000003C

Symbol: moreToDo
   Definitions
      At line 83 in file Print.s
   Uses
      At line 102 in file Print.s
Comment: moreToDo used once
pound 00000080

Symbol: pound
   Definitions
      At line 114 in file Print.s
   Uses
      At line 92 in file Print.s
Comment: pound used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

stillMore 00000028

Symbol: stillMore
   Definitions
      At line 55 in file Print.s
   Uses
      At line 44 in file Print.s
Comment: stillMore used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

len 00000004

Symbol: len
   Definitions
      At line 18 in file Print.s
   Uses
      At line 100 in file Print.s
      At line 106 in file Print.s

value 00000000

Symbol: value
   Definitions
      At line 17 in file Print.s
   Uses
      At line 49 in file Print.s
      At line 51 in file Print.s
      At line 99 in file Print.s
      At line 103 in file Print.s

2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
   Uses
      At line 53 in file Print.s
      At line 57 in file Print.s
      At line 105 in file Print.s
      At line 111 in file Print.s
      At line 116 in file Print.s
      At line 118 in file Print.s
      At line 120 in file Print.s
      At line 122 in file Print.s
      At line 124 in file Print.s

ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
   Uses
      None
Comment: ST7735_OutString unused
2 symbols
346 symbols in table
